(|main|
 (|head_TCC1| 0
  (|head_TCC1-1| NIL 3580636482 ("" (SUBTYPE-TCC) NIL NIL)
   ((< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|tail_TCC1| 0
  (|tail_TCC1-1| NIL 3580636482 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|tail_TCC2| 0
  (|tail_TCC2-1| NIL 3582609623 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|cut_TCC1| 0
  (|cut_TCC1-1| NIL 3580636482 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|cut_TCC2| 0
  (|cut_TCC2-1| NIL 3582609623 ("" (SUBTYPE-TCC) NIL NIL)
   ((< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|wholestring_TCC1| 0
  (|wholestring_TCC1-1| NIL 3586123140 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   NIL))
 (|equal_multi| 0
  (|no| "no" 3583180544
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (EXPAND "cut")
          (("" (EXPAND "tail")
            (("" (LIFT-IF)
              (("" (PROP)
                (("1" (APPLY-EXTENSIONALITY :HIDE? T)
                  (("1" (GRIND) NIL NIL)
                   ("2" (GRIND) (("2" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|tail| CONST-DECL "finseq[T]" |main| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|j!1| SKOLEM-CONST-DECL "nat" |main| NIL)
    (|p!1| SKOLEM-CONST-DECL "finseq[T]" |main| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|k!1| SKOLEM-CONST-DECL "nat" |main| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (> CONST-DECL "bool" |reals| NIL) (|cut| CONST-DECL "finseq[T]" |main| NIL)
    (|head| CONST-DECL "finseq[T]" |main| NIL))
   SHOSTAK)
  (|equal_multi-2| "no" 3583180451
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (EXPAND "cut")
          (("" (LIFT-IF)
            (("" (LIFT-IF)
              (("" (EXPAND "tail")
                (("" (LIFT-IF)
                  (("" (LIFT-IF)
                    (("" (ASSERT)
                      (("" (GRIND)
                        (("1" (POSTPONE) NIL NIL) ("2" (POSTPONE) NIL NIL)
                         ("3" (POSTPONE) NIL NIL) ("4" (POSTPONE) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)
  (|equal_multi-1| NIL 3581396670
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (EXPAND "cut")
          (("" (LIFT-IF)
            (("" (LIFT-IF)
              (("" (EXPAND "tail")
                (("" (LIFT-IF)
                  (("" (LIFT-IF)
                    (("" (ASSERT)
                      (("" (APPLY-EXTENSIONALITY :HIDE? T)
                        (("1" (GRIND) NIL NIL)
                         ("2" (APPLY-EXTENSIONALITY :HIDE? T)
                          (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|tail| CONST-DECL "finseq[T]" |main| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cut| CONST-DECL "finseq[T]" |main| NIL)
    (|head| CONST-DECL "finseq[T]" |main| NIL))
   SHOSTAK))
 (|head_tail| 0
  (|head_tail-1| NIL 3581396648
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (LIFT-IF)
          (("" (EXPAND "tail")
            (("" (LIFT-IF)
              (("" (LIFT-IF)
                (("" (PROP)
                  (("1" (APPLY-EXTENSIONALITY :HIDE? T)
                    (("1" (GRIND) NIL NIL)
                     ("2" (APPLY-EXTENSIONALITY :HIDE? T)
                      (("2" (GRIND) NIL NIL)) NIL)
                     ("3" (SKOSIMP) (("3" (GRIND) NIL NIL)) NIL)
                     ("4" (SKOSIMP) NIL NIL))
                    NIL)
                   ("2" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)
                   ("3" (LIFT-IF)
                    (("3" (LIFT-IF)
                      (("3" (PROP)
                        (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)
                         ("2" (GRIND) NIL NIL)
                         ("3" (LIFT-IF)
                          (("3" (ASSERT)
                            (("3" (APPLY-EXTENSIONALITY :HIDE? T)
                              (("3" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)
                   ("5" (GRIND) NIL NIL)
                   ("6" (LIFT-IF) (("6" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|head| CONST-DECL "finseq[T]" |main| NIL) (T TYPE-EQ-DECL NIL |main| NIL)
    (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|tail| CONST-DECL "finseq[T]" |main| NIL))
   SHOSTAK))
 (|equal_single| 0
  (|equal_single-1| NIL 3581396631
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (EXPAND "tail")
        (("" (LIFT-IF)
          (("" (PROP)
            (("1" (APPLY-EXTENSIONALITY :HIDE? T)
              (("1" (GRIND) NIL NIL)
               ("2" (APPLY-EXTENSIONALITY :HIDE? T)
                (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL)
             ("2" (APPLY-EXTENSIONALITY :HIDE? T)
              (("1" (GRIND) NIL NIL)
               ("2" (APPLY-EXTENSIONALITY :HIDE? T)
                (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|head| CONST-DECL "finseq[T]" |main| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (O CONST-DECL "finseq" |finite_sequences| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|p!1| SKOLEM-CONST-DECL "finseq[T]" |main| NIL)
    (|j!1| SKOLEM-CONST-DECL "nat" |main| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|tail| CONST-DECL "finseq[T]" |main| NIL))
   SHOSTAK))
 (|p_emptyhead| 0
  (|p_emptyhead-1| NIL 3583761667
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (PROP)
          (("" (APPLY-EXTENSIONALITY :HIDE? T)
            (("1" (GRIND) NIL NIL)
             ("2" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)
             ("3" (SKOSIMP)
              (("3" (TYPEPRED "x!1") (("3" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|head| CONST-DECL "finseq[T]" |main| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL) (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|p_emptytail| 0
  (|p_emptytail-1| NIL 3583761858
   ("" (SKOSIMP)
    (("" (EXPAND "tail")
      (("" (LIFT-IF)
        (("" (PROP)
          (("" (APPLY-EXTENSIONALITY :HIDE? T)
            (("1" (GRIND) NIL NIL)
             ("2" (APPLY-EXTENSIONALITY :HIDE? T)
              (("2" (TYPEPRED "x!1") (("2" (GRIND) NIL NIL)) NIL)) NIL)
             ("3" (SKOSIMP)
              (("3" (TYPEPRED "x!1") (("3" (GRIND) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|tail| CONST-DECL "finseq[T]" |main| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL) (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mult_divides2| APPLICATION-JUDGEMENT "(divides(m))" |divides| NIL)
    (|mult_divides1| APPLICATION-JUDGEMENT "(divides(n))" |divides| NIL))
   SHOSTAK))
 (|p_emptycut| 0
  (|p_emptycut-1| NIL 3583775779
   ("" (SKOSIMP)
    (("" (EXPAND "cut")
      (("" (LIFT-IF)
        (("" (ASSERT)
          (("" (PROP)
            (("1" (GRIND) NIL NIL)
             ("2" (EXPAND "head") (("2" (LIFT-IF) (("2" (GRIND) NIL NIL)) NIL))
              NIL)
             ("3" (GRIND) NIL NIL) ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL)
             ("6" (GRIND) NIL NIL) ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL)
             ("9" (GRIND) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cut| CONST-DECL "finseq[T]" |main| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|head| CONST-DECL "finseq[T]" |main| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL))
   SHOSTAK))
 (|j_emptyhead| 0
  (|j_emptyhead-1| NIL 3583762203
   ("" (SKOSIMP)
    (("" (EXPAND "head")
      (("" (LIFT-IF)
        (("" (ASSERT)
          (("" (APPLY-EXTENSIONALITY :HIDE? T)
            (("1" (GRIND) NIL NIL)
             ("2" (APPLY-EXTENSIONALITY :HIDE? T) (("2" (SKOSIMP) NIL NIL))
              NIL)
             ("3" (SKOSIMP)
              (("3" (TYPEPRED "x!1") (("3" (GRIND) NIL NIL)) NIL)) NIL)
             ("4" (SKOSIMP) NIL NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|head| CONST-DECL "finseq[T]" |main| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL) (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|empty_seq| CONST-DECL "finseq" |finite_sequences| NIL))
   SHOSTAK))
 (|j_emptytail| 0
  (|j_emptytail-1| NIL 3583762632
   ("" (SKOSIMP)
    (("" (ASSERT)
      (("" (APPLY-EXTENSIONALITY :HIDE? T)
        (("1" (GRIND) NIL NIL)
         ("2" (APPLY-EXTENSIONALITY :HIDE? T)
          (("2" (EXPAND "tail") (("2" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|finseq| TYPE-EQ-DECL NIL |finite_sequences| NIL)
    (T TYPE-EQ-DECL NIL |main| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|seq| FORMAL-TYPE-DECL NIL |main| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|tail| CONST-DECL "finseq[T]" |main| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|jk_emptycut| 0
  (|jk_emptycut-1| NIL 3583956410
   ("" (SKOSIMP) (("" (EXPAND "cut") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   ((|cut| CONST-DECL "finseq[T]" |main| NIL)) SHOSTAK))
 (|lengthhead| 0
  (|lengthhead-1| NIL 3583782560
   ("" (SKOSIMP)
    (("" (EXPAND "head") (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|head| CONST-DECL "finseq[T]" |main| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|lengthtail| 0
  (|lengthtail-1| NIL 3583782591
   ("" (SKOSIMP)
    (("" (EXPAND "tail")
      (("" (LIFT-IF)
        (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|tail| CONST-DECL "finseq[T]" |main| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   SHOSTAK))
 (|lengthcut| 0
  (|lengthcut-1| NIL 3583782613
   ("" (SKOSIMP)
    (("" (EXPAND "cut")
      (("" (LIFT-IF)
        (("" (LIFT-IF) (("" (LIFT-IF) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|cut| CONST-DECL "finseq[T]" |main| NIL))
   SHOSTAK)))

