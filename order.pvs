delseq  [T : TYPE]: THEORY

  BEGIN

p,q,s,d,h,t, r: VAR finseq[T]
i,j,k,n: VAR nat
a, b, c: VAR T

empty?(p): bool = (p`length = 0)

ne_seq?(p): bool =
             (length(p) > 0)

singletonseq(t:T): finseq[T] =
          (# length := 1,
           seq := LAMBDA (i:below(1)):t
           #)
first(p: (ne_seq?)):T = p`seq(0)

remaining(p: (ne_seq?)): {d : finseq[T] | d`length < p`length} =
  LET len = p`length - 1
    IN (# length := len, seq := (LAMBDA (i:below(len)): p`seq(i+1)) #)
%first: lemma length(p)> 1 IMPLIES length(tai(p))=  length(p)-1

%first2: lemma length(p)> 1 implies tai(p)`seq = p`seq(0)
find(a, p, (m: upto(p`length))): RECURSIVE upto(p`length) =
  (IF m = p`length
   THEN m
   ELSIF p`seq(m) = a
     THEN m
     ELSE find(a, p, m+1)
     ENDIF)
     MEASURE p`length - m

remove(p, (i: below(p`length))): finseq[T]  =
 LET newlen = p`length - 1
   IN
  p WITH [`length := newlen,
          `seq := (LAMBDA (j:below(newlen)): IF j < i THEN p`seq(j) ELSE p`seq(j+1) ENDIF)]
 

delete_seq(d, p): RECURSIVE finseq[T] =
 IF ne_seq?(d)
  THEN LET a = first(d),
           i = find(a, p, 0)
     IN IF i < p`length
         THEN delete_seq(remaining(d), remove(p, i))
         ELSE delete_seq(remaining(d), p)
         ENDIF
  ELSE empty_seq
  ENDIF
  MEASURE d`length

fi: lemma length(d)> 0 and length(p)> length(d)
                 IMPLIES length(delete_seq(d,p))= length(p)-length(d)

head(j,p): finseq[T] =
			IF j < p`length THEN
			       (# length := j,
			       seq := LAMBDA (i:below[j]): p`seq(i)
			       	  	  				       	  	 	        #)
			ELSE p
			ENDIF

% TAIL definition    

tail(k,p): finseq[T] = 
	   	     if k <  p`length THEN
		     (# length := p`length - k,
		     seq := (LAMBDA (i: below[p`length - k]): p`seq(k+i))
		     #)
		     ELSE empty_seq
		     ENDIF

cut(j,k,p): finseq[T] = 
	    	       IF k <p`length AND j < p`length AND j < k THEN 
	    	     (# length := k - j,
		     seq :=(LAMBDA (i:below[k-j]): p`seq( j+i))#)
		     
		     ELSE IF j>length(p) and k<length(p) and k<j THEN
		     	     head(k,p) 
	     ELSE IF k>length(p) and j<length(p) and k>j THEN
		     	     head(j,p) 
			ELSE empty_seq
		ENDIF ENDIF ENDIF

ordercrossover(p,q,j,k):finseq[T]=
          LET s = cut(j,k,p),
	      d=delete_seq(s,q)
                 IN IF ne_seq?(d)
THEN
             head(j,d) o s o tail(k,d)
ELSE
              p
ENDIF  
%aqasws: lemma length(ordercrossover(p,q,j,k))= length(p)
asd: lemma   ordercrossover(p,q,0,0) =p 

  END delseq
